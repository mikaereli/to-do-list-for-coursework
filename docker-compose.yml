version: '3.8'

services:

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=to-do-list
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: app/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/to-do-list
      - REDIS_URL=redis://redis:6379/
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - PYTHONPATH=/app
    volumes:
      - .:/app
    networks:
      - app-network
    command: >
      sh -c "python -m alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000"

  telegram-consumer:
    build:
      context: .
      dockerfile: app/services/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - TELEGRAM_BOT_TOKEN=token
      - PYTHONPATH=/app
    command: python -m app.services.consumer
    volumes:
      - .:/app
    restart: always
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.37.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - app-network

  grafana:
    image: grafana/grafana:9.3.2
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:
  prometheus-data:
  grafana-data:
